{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "This CF will be creating VPC Subnet IGW Route Server for IBM India PVT LTD",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
				"Label": {
					"default": "VPC configuration parameters"
				},
				"Parameters": ["VPCCIDR",
				"PublicSubnetCIDR", "VPCNAME", "SUBNETNAME", "WEBSERVER001", "WEBSERVER002",
				"SSHLocation"]
			}],
			"ParameterLabels": {
				"VPCCIDR": {
					"default": "Enter Name of new VPC"
				},
				"PublicSubnetCIDR": {
					"default": "Enter Name public subnet"
				},
				"SSHLocation": {
					"default": "Subnet allowed to ssh on TCP to public subnet"
				}
			}
		}
	},
	"Parameters": {
		"VPCNAME": {
			"Default": "Test",
			"Description": "Enter the name off VPC.",
			"Type": "String"
		},
		"VPCCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.10.0.0/16",
			"Description": "Enter the Adress space for VPC.",
			"Type": "String"
		},
		"PublicSubnetCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.10.10.0/24",
			"Description": "Enter the Adress space for public subnet",
			"Type": "String"
		},
		"SSHLocation": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/0-28",
			"Default": "0.0.0.0/0",
			"Description": "Network allowed to ssh to instances in public subnet.",
			"Type": "String"
		},
		"SUBNETNAME": {
			"Default": "Subnet1",
			"Description": "Enter the name off Subnet.",
			"Type": "String"
		},
		"AvailabilityZone": {
			"Default": "us-east-1a",
			"Description": "Enter AZ name here.",
			"Type": "String"
		},
		"WEBSERVER001": {
			"Default": "Server",
			"Description": "Enter the name off Server.",
			"Type": "String"
		},
		"WEBSERVER002": {
			"Default": "Server",
			"Description": "Enter the name off Server1.",
			"Type": "String"
		}
	},
	"Mappings": { 
		"RegionMap" : {
			"us-east-1"      : { "HVM64" : "ami-00eb20669e0990cb4"},
			"us-east-2"      : { "HVM64" : "ami-0c64dd618a49aeee8"}
                }
		
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"EnableDnsSupport": "true",
				"EnableDnsHostnames": "true",
				"CidrBlock": {
					"Ref": "VPCCIDR"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {"Ref" : "VPCNAME" }
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": { "Fn::Join" : [ "-", [ {"Ref" : "VPCNAME"},"IGW","Northverginia" ] ] }
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"PublicSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnetCIDR"
				},
				"AvailabilityZone" : {"Ref" :  "AvailabilityZone"},
				"Tags": [{
					"Key": "Name",
					"Value": { "Fn::Join": ["", [{ "Ref": "VPCNAME"}, {"Ref" : "SUBNETNAME"}]] }
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": { "Fn::Join": ["-", [{ "Ref": "VPCNAME"},"ROUTE"]] }
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicSubnetRouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet"
				},
				"RouteTableId": {
					"Ref": "PublicSubnetRouteTable"
				}
			}
		},
		"PublicInstanceSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable SSH access via port 22",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": {
						"Ref": "SSHLocation"
					}
				},
				{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				}],
				"Tags": [{
					"Key": "Name",
					"Value": { 	"Fn::Join": ["-", [{ "Ref": "VPCNAME" },"SG"]] }
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"Server1": {
			"Type": "AWS::EC2::Instance",  
			"Properties": {
			"ImageId"            : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "HVM64" ] },
			"InstanceType"       : "t2.micro",
			"KeyName"            : "laptop",
			"NetworkInterfaces" : [{
			"AssociatePublicIpAddress" : "true",
			"DeviceIndex"              : "0",
			"DeleteOnTermination"      : "true",
			"SubnetId"                 : {"Ref" : "PublicSubnet"},
			"GroupSet"                 : [ { "Ref" : "PublicInstanceSG" }]
							   } ],
			"Tags" : [{
						"Key": "Name",
						"Value" :  {"Ref" : "WEBSERVER001"}
			          },
			{
				"Key": "Owner",
				"Value" : "Sree"
	        }       ]
		                 }
		    },
		"Server2": {
			"Type": "AWS::EC2::Instance",  
			"Properties": {
			"ImageId"            : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "HVM64" ] },
			"InstanceType"       : "t2.micro",
			"KeyName"            : "laptop",
			"NetworkInterfaces" : [{
			"AssociatePublicIpAddress" : "true",
			"DeviceIndex"              : "0",
			"DeleteOnTermination"      : "true",
			"SubnetId"                 : {"Ref" : "PublicSubnet"},
			"GroupSet"                 : [ { "Ref" : "PublicInstanceSG" }]
							   } ],
			"Tags" : [{
						"Key": "Name",
						"Value" :  {"Ref" : "WEBSERVER002"}
			          },
			{
				"Key": "Owner",
				"Value" : "Sree"
	        }       ]
		                 }
		    }
	},
	"Outputs": {
		"VPCNAME": {
			"Description": " VPC has been Newly created. ",
			"Value": {
				"Ref": "VPCNAME"
			}
		},
		"SUBNETNAME": {
			"Description": " Subnetname has been Newly created.",
			"Value": {
				"Ref": "VPC"
			}
		},
		"WEBSERVER": {
			"Description": "Webserver has been Newly created.",
			"Value": {
				"Ref": "VPC"
			}
		},
		"VPCId": {
			"Description": "VPCId of the newly created VPC",
			"Value": {
				"Ref": "VPC"
			}
		},
		"PublicSubnet": {
			"Description": "SubnetId of the public subnet",
			"Value": {
				"Ref": "PublicSubnet"
			}
		},
		"PublicSubnetRouteTable": {
			"Description": "Public route table",
			"Value": {
				"Ref": "PublicSubnetRouteTable"
			}
		},
		"PublicInstanceSG": {
			"Description": "SG for instances in public subnet",
			"Value": {
				"Ref": "PublicInstanceSG"
			}
		}
		
	}
}