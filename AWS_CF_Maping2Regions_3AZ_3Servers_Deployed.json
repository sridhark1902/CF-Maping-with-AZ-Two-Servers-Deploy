 {
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Creates a two-subnet VPC (public w/ NAT gateway and private) (c) 2017 Air11 Technology LLC -- licensed under the Apache OpenSource 2.0 license, https://opensource.org/licenses/Apache-2.0",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
				"Label": {
					"default": "VPC configuration parameters"
				},
				"Parameters": ["VPCCIDR", 
				"PublicSubnetCIDR",
				"SSHLocation", "VPCNAME", "WEBSERVER1", "WEBSERVER2", "WEBSERVER3"]
			}],
			"ParameterLabels": {
				"VPCCIDR": {
					"default": "Enter CIDR of new VPC"
				},
				"VPCNAME": {
					"default": "Enter The VPC name here."
				},
				"Subnet1Name": {
					"default": "Enter The Subnet-1 name here."
				},
				"Subnet2Name": {
					"default": "Enter The Subnet-2 name here."
				},
				"Subnet3Name": {
					"default": "Enter The Subnet-3 name here."
				},
				"PublicSubnetCIDR": {
					"default": "Enter CIDR of the public subnet"
				},
				"SSHLocation": {
					"default": "Subnet allowed to ssh on TCP to public subnet"
				}
			}
		}
	},
	"Parameters": {
		"VPCCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.1.0.0/16",
			"Description": "CIDR block for entire VPC.",
			"Type": "String"
		},
		"VPCNAME": {
			"Description": "Plz enter VPC name here.",
			"Type": "String"
		},
		"Subnet1Name": {
			"Description": "Plz enter Subnet-1 name here.",
			"Type": "String"
		},
		"Subnet2Name": {
			"Description": "Plz enter Subnet-2 name here.",
			"Type": "String"
		},
		"Subnet3Name": {
			"Description": "Plz enter Subnet-3 name here.",
			"Type": "String"
		},
		"PublicSubnet1CIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.1.1.0/24",
			"Description": "CIDR block for the public subnet",
			"Type": "String"
		},
		"PublicSubnet2CIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.1.2.0/24",
			"Description": "CIDR block for the public subnet",
			"Type": "String"
		},
		"PublicSubnet3CIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.1.3.0/24",
			"Description": "CIDR block for the public subnet",
			"Type": "String"
		},
		"SSHLocation": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/0-28",
			"Default": "0.0.0.0/0",
			"Description": "Network allowed to ssh to instances in public subnet.",
			"Type": "String"
		},
		"AvailabilityZone1": {
			"Default": "us-east-1a",
			"Description": "Enter AZ name here.",
			"Type": "String"
		},
		"AvailabilityZone2": {
			"Default": "us-east-1b",
			"Description": "Enter AZ name here.",
			"Type": "String"
		},
		"AvailabilityZone3": {
			"Default": "us-east-1c",
			"Description": "Enter AZ name here.",
			"Type": "String"
		},
		"WEBSERVER1": {
			"Default": "Server",
			"Description": "Enter Server name here.",
			"Type": "String"
		},
		"WEBSERVER2": {
			"Default": "Server",
			"Description": "Enter Server name here.",
			"Type": "String"
		},
		"WEBSERVER3": {
			"Default": "Server",
			"Description": "Enter Server name here.",
			"Type": "String"
		}
	},
	"Mappings": {
		"RegionMap" : {
			"us-east-1"      : { "HVM64" : "ami-00eb20669e0990cb4"},
			"us-east-2"      : { "HVM64" : "ami-0c64dd618a49aeee8"}
                }		
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"EnableDnsSupport": "true",
				"EnableDnsHostnames": "true",
				"CidrBlock": {
					"Ref": "VPCCIDR"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {"Fn::Join":[ "-",[{"Ref":"VPCNAME"},"VPC"]]}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": {"Fn::Join":[ "-",[{"Ref":"VPCNAME"},"IGW"]]}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"PublicSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet1CIDR"
				},
				"AvailabilityZone" : {"Ref" :  "AvailabilityZone1"},
				"Tags": [{
					"Key": "Name",
					"Value": {"Fn::Join":[ "-",[{"Ref":"VPCNAME"}, {"Ref" : "Subnet1Name"}]]}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"PublicSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet2CIDR"
				},
				"AvailabilityZone" : {"Ref" :  "AvailabilityZone2"},
				"Tags": [{
					"Key": "Name",
					"Value": {"Fn::Join":[ "-",[{"Ref":"VPCNAME"}, {"Ref" : "Subnet2Name"}]]}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"PublicSubnet3": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet3CIDR"
				},
				"AvailabilityZone" : {"Ref" :  "AvailabilityZone3"},
				"Tags": [{
					"Key": "Name",
					"Value": {"Fn::Join":[ "-",[{"Ref":"VPCNAME"}, {"Ref" : "Subnet3Name"}]]}
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicSubnetRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": { "Fn::Join": ["-", [ { "Ref": "VPCNAME" }, "Route"]] }
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicSubnetRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicSubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet1"
				},
				"RouteTableId": {
					"Ref": "PublicSubnetRouteTable"
				}
			}
		},
		"PublicSubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet2"
				},
				"RouteTableId": {
					"Ref": "PublicSubnetRouteTable"
				}
			}
		},
		"PublicSubnetRouteTableAssociation3": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet3"
				},
				"RouteTableId": {
					"Ref": "PublicSubnetRouteTable"
				}
			}
		},
		"PublicInstanceSG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Enable SSH access via port 22",
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "22",
					"ToPort": "22",
					"CidrIp": {
						"Ref": "SSHLocation"
					}
				},
				{
					"IpProtocol": "tcp",
					"FromPort": "80",
					"ToPort": "80",
					"CidrIp": "0.0.0.0/0"
				}],
				"Tags": [{
					"Key": "Name",
					"Value": { "Fn::Join": ["-", [ { "Ref": "VPCNAME" },"SG"]] }
				},
				{
					"Key": "CloudFormationStack",
					"Value": {
						"Ref": "AWS::StackId"
					}
				}]
			}
		},
		"Server1": {
			"Type": "AWS::EC2::Instance",  
			"Properties": {
			"ImageId"            : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "HVM64" ] },
			"InstanceType"       : "t2.micro",
			"KeyName"            : "laptop",
			"NetworkInterfaces" : [{
			"AssociatePublicIpAddress" : "true",
			"DeviceIndex"              : "0",
			"DeleteOnTermination"      : "true",
			"SubnetId"                 : {"Ref" : "PublicSubnet1"},
			"GroupSet"                 : [ { "Ref" : "PublicInstanceSG" }]
							   } ],
			"Tags" : [{
						"Key": "Name",
						"Value" :  {"Ref" : "WEBSERVER1"}
			          },
			{
				"Key": "Owner",
				"Value" : "Sree"
	        }       ]
		                 }
		},
		"Server2": {
			"Type": "AWS::EC2::Instance",  
			"Properties": {
			"ImageId"            : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "HVM64" ] },
			"InstanceType"       : "t2.micro",
			"KeyName"            : "laptop",
			"NetworkInterfaces" : [{
			"AssociatePublicIpAddress" : "true",
			"DeviceIndex"              : "0",
			"DeleteOnTermination"      : "true",
			"SubnetId"                 : {"Ref" : "PublicSubnet2"},
			"GroupSet"                 : [ { "Ref" : "PublicInstanceSG" }]
							   } ],
			"Tags" : [{
						"Key": "Name",
						"Value" :  {"Ref" : "WEBSERVER2"}
			          },
			{
				"Key": "Owner",
				"Value" : "Sree"
	        }       ]
		                 }
		},
		"Server3": {
			"Type": "AWS::EC2::Instance",  
			"Properties": {
			"ImageId"            : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "HVM64" ] },
			"InstanceType"       : "t2.micro",
			"KeyName"            : "laptop",
			"NetworkInterfaces" : [{
			"AssociatePublicIpAddress" : "true",
			"DeviceIndex"              : "0",
			"DeleteOnTermination"      : "true",
			"SubnetId"                 : {"Ref" : "PublicSubnet3"},
			"GroupSet"                 : [ { "Ref" : "PublicInstanceSG" }]
							   } ],
			"Tags" : [{
						"Key": "Name",
						"Value" :  {"Ref" : "WEBSERVER3"}
			          },
			{
				"Key": "Owner",
				"Value" : "Sree"
	        }       ]
		                 }
		        }
	},
	"Outputs": {
		"VPCId": {
			"Description": "VPCId of the newly created VPC",
			"Value": {
				"Ref": "VPC"
			}
		},
		"PublicSubnet1": {
			"Description": "SubnetId of the public subnet",
			"Value": {
				"Ref": "PublicSubnet1"
			}
		},
		"PublicSubnetRouteTable": {
			"Description": "Public route table",
			"Value": {
				"Ref": "PublicSubnetRouteTable"
			}
		},
		"PublicInstanceSG": {
			"Description": "SG for instances in public subnet",
			"Value": {
				"Ref": "PublicInstanceSG"
			}
		}
		
	}
}